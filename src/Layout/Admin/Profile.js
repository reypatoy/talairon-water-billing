import { useState, useEffect } from "react";
import { useSelector } from "react-redux";
import { useNavigate } from 'react-router-dom'
import { db } from "../../firebase-config";
import { collection,getDocs, query, where, } from "firebase/firestore";
import { UserAuth } from "../../context/authContext";

function Profile() {

    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [passwordConfirm, setpasswordConfirm] = useState('');
    const [number, setNumber] = useState('');
    const [formButton, setFormButton] = useState('change');
    const [formEnable, setFormEnable] = useState(false);
    const [reveal1, setReveal1] = useState(false);
    const [reveal2, setReveal2] = useState(false);
    const navigate = useNavigate();
    const user = useSelector(state => state.user);
    const [password1PlaceHolder, setpassword1PlaceHolder] = useState('********');
    const [password2PlaceHolder, setpassword2PlaceHolder] = useState('********');
    const { updateProfile } = UserAuth(); 
    const [profileId, setProfileId] = useState('');

    const handleSubmit = (e) => {
        e.preventDefault();
        if (formButton === 'change') {
            setpassword1PlaceHolder('Please enter old password');
            setpassword2PlaceHolder('Please enter new password');
            e.target.style.background = 'var(--primary-blue)';
            setFormEnable(true)
            setFormButton('save')
        }
        else {
            if(email && password && passwordConfirm && number){
                if(email.trim() && password.trim() && number.trim() && passwordConfirm.trim()){
                    if(password.length >= 6 && passwordConfirm.length >= 6){
                        try{
                            updateProfile(password, number,  passwordConfirm, profileId, user);
                        }
                        catch(error){
                            alert(error.message);
                            return;
                        }
                    }else{
                        alert('Password must be at least 6 characters');
                        return;
                    }
                }else{
                    alert('Please fill all fields')
                    return;
                }
            }else{
                alert('Please fill all fields')
                return;
            }
        }

    }
    useEffect(() => {
        if (user.isLogin) {
            const q = query(collection(db, "users"), where("id", "==", user.user.user.uid));
            const querySnapshot = getDocs(q);
            querySnapshot.then((snapshot) => {
                snapshot.forEach((doc) => {
                    if (doc.data().id === user.user.user.uid) {
                        setProfileId(doc.id);
                        setEmail(doc.data().email);
                        setNumber(doc.data().contact);
                    }
                });
            });
        }else{
            navigate('/');
        }
    }, [])

    const revealPassword1 = () => {
        if (reveal1 === false) {
            setReveal1(true)
        }else {
            setReveal1(false)
        }
    };
    const revealPassword2 = () => {
        if (reveal2 === false) {
            setReveal2(true)
        }else {
            setReveal2(false)
        }
    };
    return(
        <>
            <div className="profileContainer">
                <div className="profileHeader">
                    <h1>Administrator</h1>
                </div>
                <form>
                    <div className="profileBody">
                        <div style={ formEnable ? {'pointerEvents' : 'auto'} : {'pointerEvents' : 'none'}}>
                            <div className="profileCell">
                                <input type="text" value={email} onChange={e => setEmail(e.target.value)}/>
                                <svg width="48" height="38" viewBox="0 0 48 38" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M40.8 0H7.2C5.29044 0 3.45909 0.749949 2.10883 2.08487C0.758569 3.41979 0 5.23032 0 7.11818V30.8455C0 32.7333 0.758569 34.5438 2.10883 35.8788C3.45909 37.2137 5.29044 37.9636 7.2 37.9636H40.8C42.7096 37.9636 44.5409 37.2137 45.8912 35.8788C47.2414 34.5438 48 32.7333 48 30.8455V7.11818C48 5.23032 47.2414 3.41979 45.8912 2.08487C44.5409 0.749949 42.7096 0 40.8 0ZM7.2 4.74545H40.8C41.4365 4.74545 42.047 4.99544 42.4971 5.44041C42.9471 5.88538 43.2 6.48889 43.2 7.11818L24 18.6971L4.8 7.11818C4.8 6.48889 5.05286 5.88538 5.50294 5.44041C5.95303 4.99544 6.56348 4.74545 7.2 4.74545ZM43.2 30.8455C43.2 31.4747 42.9471 32.0783 42.4971 32.5232C42.047 32.9682 41.4365 33.2182 40.8 33.2182H7.2C6.56348 33.2182 5.95303 32.9682 5.50294 32.5232C5.05286 32.0783 4.8 31.4747 4.8 30.8455V12.528L22.752 23.3714C23.1168 23.5796 23.5307 23.6892 23.952 23.6892C24.3733 23.6892 24.7872 23.5796 25.152 23.3714L43.2 12.528V30.8455Z" fill="black"/>
                                </svg>
                            </div>
                            <div className="profileCell">
                                <input type={reveal1 ? "text" : "password"} placeholder={password1PlaceHolder} value={password} onChange={e => setPassword(e.target.value)}/>
                                <svg width="50" height="50" viewBox="0 0 50 50" fill="none" xmlns="http://www.w3.org/2000/svg" id="reveal" onClick={revealPassword1}>
                                <path d="M25 4.16669C19.2562 4.16669 14.5833 8.8396 14.5833 14.5834V20.8334H12.5C11.3949 20.8334 10.3351 21.2723 9.5537 22.0537C8.7723 22.8351 8.33331 23.895 8.33331 25V41.6667C8.33331 42.7718 8.7723 43.8316 9.5537 44.613C10.3351 45.3944 11.3949 45.8334 12.5 45.8334H37.5C38.605 45.8334 39.6649 45.3944 40.4463 44.613C41.2277 43.8316 41.6666 42.7718 41.6666 41.6667V25C41.6666 23.895 41.2277 22.8351 40.4463 22.0537C39.6649 21.2723 38.605 20.8334 37.5 20.8334H35.4166V14.5834C35.4166 8.8396 30.7437 4.16669 25 4.16669ZM18.75 14.5834C18.75 11.1375 21.5541 8.33335 25 8.33335C28.4458 8.33335 31.25 11.1375 31.25 14.5834V20.8334H18.75V14.5834ZM27.0833 36.9229V41.6667H22.9166V36.9229C22.1883 36.5058 21.6034 35.8778 21.2392 35.1216C20.875 34.3654 20.7485 33.5166 20.8764 32.687C21.0043 31.8575 21.3806 31.0862 21.9557 30.4749C22.5308 29.8635 23.2777 29.4408 24.0979 29.2625C24.7071 29.1278 25.3388 29.1316 25.9463 29.2735C26.5539 29.4155 27.1218 29.692 27.6083 30.0827C28.0947 30.4734 28.4873 30.9682 28.757 31.5309C29.0267 32.0935 29.1667 32.7094 29.1666 33.3334C29.1654 34.062 28.9722 34.7774 28.6065 35.4076C28.2407 36.0378 27.7154 36.5605 27.0833 36.9229V36.9229Z" fill="black"/>
                                </svg>
                            </div>
                            <div className="profileCell">
                                <input type={reveal2 ? "text" : "password"} placeholder={password2PlaceHolder} onChange={e => setpasswordConfirm(e.target.value)}/>
                                <svg width="50" height="50" viewBox="0 0 50 50" fill="none" xmlns="http://www.w3.org/2000/svg" id="reveal" onClick={revealPassword2}>
                                <path d="M25 4.16669C19.2562 4.16669 14.5833 8.8396 14.5833 14.5834V20.8334H12.5C11.3949 20.8334 10.3351 21.2723 9.5537 22.0537C8.7723 22.8351 8.33331 23.895 8.33331 25V41.6667C8.33331 42.7718 8.7723 43.8316 9.5537 44.613C10.3351 45.3944 11.3949 45.8334 12.5 45.8334H37.5C38.605 45.8334 39.6649 45.3944 40.4463 44.613C41.2277 43.8316 41.6666 42.7718 41.6666 41.6667V25C41.6666 23.895 41.2277 22.8351 40.4463 22.0537C39.6649 21.2723 38.605 20.8334 37.5 20.8334H35.4166V14.5834C35.4166 8.8396 30.7437 4.16669 25 4.16669ZM18.75 14.5834C18.75 11.1375 21.5541 8.33335 25 8.33335C28.4458 8.33335 31.25 11.1375 31.25 14.5834V20.8334H18.75V14.5834ZM27.0833 36.9229V41.6667H22.9166V36.9229C22.1883 36.5058 21.6034 35.8778 21.2392 35.1216C20.875 34.3654 20.7485 33.5166 20.8764 32.687C21.0043 31.8575 21.3806 31.0862 21.9557 30.4749C22.5308 29.8635 23.2777 29.4408 24.0979 29.2625C24.7071 29.1278 25.3388 29.1316 25.9463 29.2735C26.5539 29.4155 27.1218 29.692 27.6083 30.0827C28.0947 30.4734 28.4873 30.9682 28.757 31.5309C29.0267 32.0935 29.1667 32.7094 29.1666 33.3334C29.1654 34.062 28.9722 34.7774 28.6065 35.4076C28.2407 36.0378 27.7154 36.5605 27.0833 36.9229V36.9229Z" fill="black"/>
                                </svg>
                            </div>
                            <div className="profileCell">
                                <input type="contact" value={number} onChange={e => setNumber(e.target.value)}/>
                                <svg width="52" height="47" viewBox="0 0 52 47" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M42.055 25.4583C41.5783 25.4583 41.08 25.3212 40.6033 25.2233C39.6388 25.0284 38.6904 24.7732 37.765 24.4596C36.7599 24.1291 35.655 24.1462 34.663 24.5078C33.671 24.8693 32.862 25.5496 32.3917 26.4179L31.915 27.3187C29.8108 26.2401 27.8669 24.924 26.13 23.4021C24.4462 21.8322 22.9901 20.0752 21.7967 18.1733L22.7933 17.7621C23.754 17.337 24.5067 16.6057 24.9067 15.7091C25.3067 14.8125 25.3257 13.8139 24.96 12.9054C24.6159 12.0614 24.3336 11.1979 24.115 10.3204C24.0067 9.88957 23.92 9.43916 23.855 9.00832C23.5919 7.62891 22.7925 6.37973 21.6009 5.48575C20.4092 4.59177 18.9035 4.11172 17.355 4.13207H10.8333C9.91737 4.13099 9.0115 4.30489 8.1751 4.64238C7.33869 4.97987 6.59065 5.47333 5.98001 6.09041C5.3567 6.72423 4.89259 7.4725 4.61956 8.28381C4.34654 9.09512 4.27107 9.95024 4.39834 10.7904C5.57611 18.9413 9.6963 26.5132 16.12 32.3321C22.5579 38.1381 30.9354 41.8621 39.9533 42.9267C40.2346 42.9461 40.5171 42.9461 40.7983 42.9267C42.3961 42.9288 43.9387 42.3989 45.1317 41.4383C45.8144 40.8864 46.3603 40.2103 46.7337 39.4543C47.1071 38.6983 47.2995 37.8795 47.2983 37.0517V31.1767C47.2867 29.8235 46.7585 28.5155 45.8032 27.4736C44.8479 26.4318 43.5239 25.7199 42.055 25.4583ZM43.1167 37.2083C43.116 37.4816 43.052 37.7517 42.9288 38.0013C42.8057 38.2509 42.6261 38.4744 42.4017 38.6575C42.1642 38.853 41.8816 38.9984 41.5743 39.0831C41.2671 39.1678 40.9428 39.1896 40.625 39.1471C32.5396 38.1926 25.0255 34.8622 19.24 29.6687C13.4495 24.435 9.73274 17.6198 8.66667 10.2812C8.6196 9.99402 8.64379 9.70093 8.73747 9.4232C8.83115 9.14547 8.99199 8.89004 9.20834 8.67541C9.41335 8.47008 9.66416 8.30633 9.94425 8.19494C10.2243 8.08355 10.5273 8.02705 10.8333 8.02916H17.3333C17.8342 8.01809 18.3238 8.16425 18.7188 8.44275C19.1139 8.72126 19.3899 9.11489 19.5 9.55666C19.5 10.0854 19.695 10.6337 19.825 11.1625C20.0754 12.1884 20.4085 13.1964 20.8217 14.1783L17.7883 15.4708C17.267 15.6871 16.8618 16.0815 16.6617 16.5675C16.445 17.0443 16.445 17.579 16.6617 18.0558C19.7799 24.0929 25.149 28.9457 31.8283 31.7642C32.3558 31.96 32.9475 31.96 33.475 31.7642C34.0127 31.5833 34.449 31.2171 34.6883 30.7458L36.0533 28.0042C37.1711 28.3726 38.3148 28.6735 39.4767 28.905C40.04 29.0225 40.6467 29.1204 41.2317 29.1987C41.7204 29.2982 42.1559 29.5477 42.4641 29.9048C42.7722 30.2618 42.9339 30.7044 42.9217 31.1571L43.1167 37.2083ZM30.3333 3.91666H28.8167C28.242 3.9608 27.7103 4.20947 27.3386 4.60794C26.9668 5.00642 26.7853 5.52207 26.8342 6.04145C26.883 6.56083 27.1581 7.0414 27.599 7.37744C28.0399 7.71349 28.6104 7.87747 29.185 7.83332H30.3333C33.7812 7.83332 37.0878 9.07127 39.5257 11.2748C41.9637 13.4784 43.3333 16.467 43.3333 19.5833V20.6212C43.2853 21.1379 43.4659 21.6506 43.8355 22.0471C44.2051 22.4436 44.7336 22.6914 45.305 22.7362H45.4783C46.0207 22.7382 46.5442 22.5563 46.9454 22.2263C47.3465 21.8964 47.5962 21.4424 47.645 20.9542V19.5833C47.645 15.4317 45.8218 11.4497 42.5759 8.51223C39.3299 5.57473 34.9267 3.92185 30.3333 3.91666ZM34.6667 19.5833C34.6667 20.1027 34.8949 20.6008 35.3013 20.9681C35.7076 21.3353 36.2587 21.5417 36.8333 21.5417C37.408 21.5417 37.9591 21.3353 38.3654 20.9681C38.7717 20.6008 39 20.1027 39 19.5833C39 17.5058 38.0869 15.5134 36.4616 14.0443C34.8363 12.5753 32.6319 11.75 30.3333 11.75C29.7587 11.75 29.2076 11.9563 28.8013 12.3236C28.3949 12.6908 28.1667 13.1889 28.1667 13.7083C28.1667 14.2277 28.3949 14.7258 28.8013 15.0931C29.2076 15.4603 29.7587 15.6667 30.3333 15.6667C31.4826 15.6667 32.5848 16.0793 33.3975 16.8138C34.2101 17.5483 34.6667 18.5446 34.6667 19.5833Z" fill="black"/>
                                </svg>
                            </div>
                        </div>
                        <button onClick={handleSubmit}> {formButton} </button>
                    </div>
                </form>
            </div>
        </>
    )
}

export default Profile;